게임 산업에서 전통적인 게임 개발은 자체 엔진을 사전에 개발하여 게임 콘텐츠를 완성하는 방식이었다.

이로 인해 게임을 개발할 때마다 자체 게임엔진을 개발하는 비용부담이 크다는 단점을 가지고 있다.

또한, 게임 콘텐츠와 게임엔진이 독립적인 형태로 개발이 되어야 하지만 게임엔진이 사전에 마련되지 않으면 게임 콘텐츠가 개발되지 않는 문제점을 갖는다.

이러한 문제점을 해결하기 위해 최근 게임 산업에서는 게임엔진 구현에 집중하기보다는 게임 콘텐츠 생산성을 높이는 방법인 상용 엔진의 라이선스를 구매하여 개발하는 방식을 선택하고 있다.

본 논문에서는 컴포넌트 기반 시스템(Component-

Based System)이고 시장 점유율이 가장 높은 게임엔진인 유니티와 언리얼 엔진을 대상으로 두 엔진의 구조, 에디터 인터페이스, 그리고 지원하는 개발 언어를 비교하여 각 게임엔진이 가진 특징들을 분석한다.

특히, FPS(First-

Person Shooter) 게임의 구현을 통해 두 엔진에서의 플레이어 구성과 이벤트 처리 방식의 차이를 비교 설명하였다.

@highlight

게임 산업에서 전통적인 게임 개발은 자체 엔진을 사전에 개발해 게임 콘텐츠를 완성하는 방식이다.

@highlight

이로 인하여 게임을 개발할 때마다 자체 게임엔진을 개발하는 비용부담이 크다는 단점을 갖고 있다.

