일반적으로 자바에 기반하는 안드로이드 어플리케이션은 달빅(Dalvik) 가상 머신상에서 구동된다.

플랫폼에 독립적인 가상 머신을 이용하여 어플리케이션을 구동하는 방식은 하드웨어에 손상을 주지 않고 어플리케이션을 안정적으로 구동할 수 있다는 장점이 있다.

그러나 가상 머신에서 구동하기 위해 코드를 변환하는 과정이 필수적으로 포함되면서 플랫폼에 의존하지만 기계어로 변환되는 네이티브 코드에 비하여 상대적으로 속도가 느리다.

또한 하드웨어에 직접적으로 접근하는 것이 제한된다는 단점 또한 존재한다.

수많은 프로그램들이 이미 C/C++를 기반으로 개발되어 있으며 이러한 프로그램들을 다른 언어로 다시 개발하는 일 없이 재사용할 수 있다면 개발에 소요되는 시간과 비용이 크게 절감될 것이다.

본 논문에서는 JNI(Java Native Interface)를 통해 C/C++로 짜여진 코드를 안드로이드에서 구동하는 방법을 제시한다.

먼저 자바 클래스에서 C/C++ 네이티브 함수를 호출하는 방법과 C/C++ 네이티브 코드에서 자바 클래스 내부에 선언된 자바 함수를 호출하는 방법을 알아보고, 다른 언어로 짜여진 코드 간에 정보를 주고 받으며 상호 연동하는 과정에 대하여 설명한다.

또한 안드로이드에서 네이티브 코드를 활용한 실제 예를 구체적으로 설명한다.

@highlight

본고에서는 JNI(Java Native Interface)를 통해 C/C++로 짜여진 코드를 안드로이드에서 구동하는 방법을 제시한다.

