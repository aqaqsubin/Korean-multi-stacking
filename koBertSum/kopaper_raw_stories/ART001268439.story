대부분의 전자제품은 날로 다양한 소비자의 니즈로 인해 수많은 라인업을 보유하고 있다.

이에 대응하기 위해 보통 ‘베이스 모델’이라 불리는 초기 개발모델에서 각 상품화 과제의 특정 요구사항을 반영하여 파생개발을 한다.

제품 라인 업에 기반한 소프트웨어 라인 업이 형성되는 개발환경에서 ‘베이스 코드’의 구조와 그 구성요소의 품질은 향후 파생되는 여러 많은 제품의 생산성과 품질의 근간이 된다.

‘베이스 코드’는 최초 개발 후 여러 상품화를 거치면서 그 구조와 코드 자체에 수 많은 변경이 가해진다.

상품화 과제의 요구사양에 따라 변경되거나 추가되는 기능의 구현은 필수적 활동이며, 성능 개선 및 문제점 해결을 위한 구조 및 코드의 변경 역시 상품화를 통해 지속적으로 발생하는 유지관리 활동이다.

하지만 위와 같은 변경은 최초 설계 시 의도된 구조가 깨지거나 코드의 복잡도가 증가하는 등의 노쇠화 징후(Ageing symptom)로 나타나 유지관리에 어려움을 준다.

본 논문은 노쇠화된 베이스 코드의 상품화 적용 효율을 높이기 위해 재사용성, 유지보수성, 확장성 등의 비기능적 요소(Quality attribute)의 개선을 위한 절차와 기법으로 리엔지니어링 프레임워크를 제안한다.

@highlight

다양해지는 소비자의 니즈를 만족시키기 위해 '베이스 코드'는 최초 개발 후 상품화를 거치며 구조와 코드에 많은 변경이 가해진다.

@highlight

하지만 그 과정에서 노쇠화 징후가 나타나 유지관리가 어려운데 본 논문은 노쇠화된 베이스 코드의 상품화 적용 효율을 높이고 비기능적 요소를 개선하기 위해 리엔지니어링 프레임워크를 제시한다.

